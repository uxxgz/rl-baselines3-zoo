



PandaReachDense-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaPushDense-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaSlideDense-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaPickAndPlace-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"


PandaReach-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaPush-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaSlide-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaPickAndPlace-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"



PandaReachJointsDense-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

PandaReachJoints-v3:
  n_timesteps: !!float 1000000.0
  policy: 'MultiInputPolicy'
  buffer_size: 1000000
  batch_size: 256
  learning_rate: 0.001
  normalize: true
  replay_buffer_class: HerReplayBuffer
  replay_buffer_kwargs: "dict( goal_selection_strategy='future', n_sampled_goal=4, )"
  policy_kwargs: "dict(net_arch=[64, 64])"

